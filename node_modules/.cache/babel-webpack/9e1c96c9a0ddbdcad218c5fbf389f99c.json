{"ast":null,"code":"import _asyncToGenerator from \"/home/zeyros/Documents/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Status } from './gamestatus';\nexport class Gamelogic {\n  constructor() {\n    this.gameField = [];\n    this.winsSituationOne = [[1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1]];\n    this.winsSituationTwo = [[2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2], [2, 0, 0, 2, 0, 0, 2, 0, 0], [0, 2, 0, 0, 2, 0, 0, 2, 0], [0, 0, 2, 0, 0, 2, 0, 0, 2], [0, 0, 2, 0, 2, 0, 2, 0, 0], [2, 0, 0, 0, 2, 0, 0, 0, 2]];\n    this.gameStatus = Status.STOP;\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n\n  gameStart() {\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    this.currentTurn = this.randomPlayerStart();\n    this.gameStatus = Status.START;\n  }\n\n  randomPlayerStart() {\n    const startPlayer = Math.floor(Math.random() * 2) + 1;\n    return startPlayer;\n  }\n\n  setField(position, value) {\n    // @ts-ignore\n    this.gameField[position] = value;\n  }\n\n  getPlayerColorClass() {\n    const colorClass = this.currentTurn === 2 ? 'playerTwo' : 'playerOne';\n    return colorClass;\n  }\n\n  changePlayer() {\n    this.currentTurn = this.currentTurn === 2 ? 1 : 2;\n  }\n\n  arrayEquals(a, b) {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((value, index) => value === b[index]);\n  }\n\n  checkGameEndWinner() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let isWinner = false;\n      const checkArray = _this.currentTurn === 1 ? _this.winsSituationOne : _this.winsSituationTwo; // @ts-ignore\n\n      const currentArray = [];\n\n      _this.gameField.forEach((subfield, index) => {\n        if (subfield !== _this.currentTurn) {\n          currentArray[index] = 0;\n        } else {\n          currentArray[index] = subfield;\n        }\n      });\n\n      checkArray.forEach((checkfield, checkindex) => {\n        if (true) {}\n      }); // @ts-ignore\n\n      console.log(currentArray);\n\n      if (isWinner) {\n        _this.gameEnd();\n\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  checkGameEndFull() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let isFull = true;\n\n      if (_this2.gameField.includes(0)) {\n        isFull = false;\n      }\n\n      if (isFull) {\n        _this2.gameEnd();\n\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  gameEnd() {\n    this.gameStatus = Status.STOP;\n  }\n\n}","map":{"version":3,"sources":["/home/zeyros/Documents/tic-tac-toe/src/app/gamelogic.ts"],"names":["Status","Gamelogic","constructor","gameField","winsSituationOne","winsSituationTwo","gameStatus","STOP","gameStart","currentTurn","randomPlayerStart","START","startPlayer","Math","floor","random","setField","position","value","getPlayerColorClass","colorClass","changePlayer","arrayEquals","a","b","Array","isArray","length","every","index","checkGameEndWinner","isWinner","checkArray","currentArray","forEach","subfield","checkfield","checkindex","console","log","gameEnd","checkGameEndFull","isFull","includes"],"mappings":"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","sourcesContent":["import { Status } from './gamestatus';\nexport class Gamelogic {\n    constructor() {\n        this.gameField = [];\n        this.winsSituationOne = [\n            [1, 1, 1, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 1, 1, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 1, 1, 1],\n            [1, 0, 0, 1, 0, 0, 1, 0, 0],\n            [0, 1, 0, 0, 1, 0, 0, 1, 0],\n            [0, 0, 1, 0, 0, 1, 0, 0, 1],\n            [0, 0, 1, 0, 1, 0, 1, 0, 0],\n            [1, 0, 0, 0, 1, 0, 0, 0, 1],\n        ];\n        this.winsSituationTwo = [\n            [2, 2, 2, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 2, 2, 2, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 2, 2, 2],\n            [2, 0, 0, 2, 0, 0, 2, 0, 0],\n            [0, 2, 0, 0, 2, 0, 0, 2, 0],\n            [0, 0, 2, 0, 0, 2, 0, 0, 2],\n            [0, 0, 2, 0, 2, 0, 2, 0, 0],\n            [2, 0, 0, 0, 2, 0, 0, 0, 2],\n        ];\n        this.gameStatus = Status.STOP;\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    gameStart() {\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this.currentTurn = this.randomPlayerStart();\n        this.gameStatus = Status.START;\n    }\n    randomPlayerStart() {\n        const startPlayer = Math.floor(Math.random() * 2) + 1;\n        return startPlayer;\n    }\n    setField(position, value) {\n        // @ts-ignore\n        this.gameField[position] = value;\n    }\n    getPlayerColorClass() {\n        const colorClass = (this.currentTurn === 2) ? 'playerTwo' : 'playerOne';\n        return colorClass;\n    }\n    changePlayer() {\n        this.currentTurn = (this.currentTurn === 2) ? 1 : 2;\n    }\n    arrayEquals(a, b) {\n        return Array.isArray(a) && Array.isArray(b) && a.length === b.length\n            && a.every((value, index) => value === b[index]);\n    }\n    async checkGameEndWinner() {\n        let isWinner = false;\n        const checkArray = (this.currentTurn === 1) ? this.winsSituationOne : this.winsSituationTwo;\n        // @ts-ignore\n        const currentArray = [];\n        this.gameField.forEach((subfield, index) => {\n            if (subfield !== this.currentTurn) {\n                currentArray[index] = 0;\n            }\n            else {\n                currentArray[index] = subfield;\n            }\n        });\n        checkArray.forEach((checkfield, checkindex) => {\n            if (true) {\n            }\n        });\n        // @ts-ignore\n        console.log(currentArray);\n        if (isWinner) {\n            this.gameEnd();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    async checkGameEndFull() {\n        let isFull = true;\n        if (this.gameField.includes(0)) {\n            isFull = false;\n        }\n        if (isFull) {\n            this.gameEnd();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    gameEnd() {\n        this.gameStatus = Status.STOP;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}